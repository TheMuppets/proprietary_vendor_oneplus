########################### Start of libnfc-nci.conf ###########################

###############################################################################
# Application options
NFC_DEBUG_ENABLED=0

###############################################################################
# File used for NFA storage
NFA_STORAGE="/data/nfc"

###############################################################################
# Force UICC to only listen to the following technology(s).
# The bits are defined as tNFA_TECHNOLOGY_MASK in nfa_api.h.
# Default is NFA_TECHNOLOGY_MASK_A | NFA_TECHNOLOGY_MASK_B | NFA_TECHNOLOGY_MASK_F
UICC_LISTEN_TECH_MASK=0x07

###############################################################################
# AID for Empty Select command
# If specified, this AID will be substituted when an Empty SELECT command is
# detected.  The first byte is the length of the AID.  Maximum length is 16.
AID_FOR_EMPTY_SELECT={08:A0:00:00:01:51:00:00:00}

###############################################################################
# Force tag polling for the following technology(s).
# The bits are defined as tNFA_TECHNOLOGY_MASK in nfa_api.h.
# Default is NFA_TECHNOLOGY_MASK_A | NFA_TECHNOLOGY_MASK_B |
#            NFA_TECHNOLOGY_MASK_F | NFA_TECHNOLOGY_MASK_ISO15693 |
#            NFA_TECHNOLOGY_MASK_B_PRIME | NFA_TECHNOLOGY_MASK_KOVIO |
#            NFA_TECHNOLOGY_MASK_ACTIVE
#
# Notable bits:
# NFA_TECHNOLOGY_MASK_A	        0x01    /* NFC Technology A             */
# NFA_TECHNOLOGY_MASK_B	        0x02    /* NFC Technology B             */
# NFA_TECHNOLOGY_MASK_F	        0x04    /* NFC Technology F             */
# NFA_TECHNOLOGY_MASK_V       	0x08    /* NFC Technology V             */
# NFA_TECHNOLOGY_MASK_KOVIO	    0x20    /* Proprietary Technology       */
# NFA_TECHNOLOGY_MASK_ACTIVE    0x40    /* NFC Technology ACM active mode */
POLLING_TECH_MASK=0x6F

###############################################################################
# Force P2P to only listen for the following technology(s).
# The bits are defined as tNFA_TECHNOLOGY_MASK in nfa_api.h.
# Default is NFA_TECHNOLOGY_MASK_ACTIVE
# (type A passive is ignored to avoid interop issues in China).
# (type F passive is ignored to support Japan)
#
# Notable bits:
# NFA_TECHNOLOGY_MASK_A             0x01    /* NFC Technology A             */
# NFA_TECHNOLOGY_MASK_F             0x04    /* NFC Technology F             */
# NFA_TECHNOLOGY_MASK_ACTIVE         0x40    /* NFC Technology Active        */
P2P_LISTEN_TECH_MASK=0x40

###############################################################################
# Keep the nfa storage file.
PRESERVE_STORAGE=0x01

###############################################################################
# Override the stack default for NFA_EE_MAX_EE_SUPPORTED set in nfc_target.h.
# The value is set to 3 by default as it assumes we will discover 0xF2,
# 0xF3, and 0xF4. If a platform will exclude and SE, this value can be reduced
# so that the stack will not wait any longer than necessary.
# Maximum EE supported number
NFA_MAX_EE_SUPPORTED=0x03


###############################################################################
# When screen is turned OFF, specify the desired CE mode to the controller.
# 0: No card-emulation; DEFAULT
# 1: Screen-off card-emulation enabled
CE_ON_SCREEN_OFF_STATE=1

###############################################################################
# In Switch OFF mode (phone switched-off), specify the desired CE mode to
# the controller.
# 0: No card-emulation; DEFAULT
# 1: Switch-off card-emulation enabled
CE_ON_SWITCH_OFF_STATE=1


###############################################################################
# When screen is turned off, specify the desired power state of the controller.
# 0: power-off-sleep state; DEFAULT
# 1: full-power state
# 2: screen-off card-emulation (CE4/CE3/CE1 modes are used)
SCREEN_OFF_POWER_STATE=1

###############################################################################
# AID_MATCHING constants
# AID_MATCHING_EXACT_ONLY 0x00
# AID_MATCHING_EXACT_OR_PREFIX 0x01
# AID_MATCHING_PREFIX_ONLY 0x02
# AID_MATCHING_EXACT_OR_SUBSET_OR_PREFIX 0x03
AID_MATCHING_MODE=0x03


###############################################################################
#Set the default Felica T3T System Code :
#This settings will be used when application does not set this parameter
DEFAULT_SYS_CODE={FE:FE}


###############################################################################
# Value of NCI parameter NFCC_CONFIG_CONTROL
# 0x00  NFCC is not allowed to manage RF configuration
# 0x01  NFCC is allowed to manage RF configuration
NFCC_CONFIG_CONTROL=0x01

###############################################################################
#Select NCI device power states in which routing to off-host element is allowed.
#Default: 0x3B.
OFFHOST_AID_ROUTE_PWR_STATE=0x3B

###############################################################################
# Use generic mifare reader implementation, not proprietary one.
LEGACY_MIFARE_READER=0x0

###############################################################################
# Block routing for unsupported power states
# It means for AID routed to HCE, an error is returned in power modes not supported
# by HCE (screen off, switch off) instead of routing to the secure element.
# This behavior is required for GSMA certification.
NFA_AID_BLOCK_ROUTE=1


###############################################################################
#Set the HCE supported techs:
#define NFA_TECHNOLOGY_MASK_A 0x01 /* NFC Technology A             */
#define NFA_TECHNOLOGY_MASK_B 0x02 /* NFC Technology B             */
#define NFA_TECHNOLOGY_MASK_F 0x04 /* NFC Technology F             */
HOST_LISTEN_TECH_MASK = 0x7

###############################################################################
# EXPERIMENTAL
# Stack attempts to automatically detect when a reader fails to establish a link
# with this device and the firmware mechanisms for dynamic settings are not
# effective. Stack then attempts to switch the RF parameters to try different
# settings. Mechanism based on timers and patterns.
# - only with firmware >= 1.7
# - requires the firmware logs to be enabled
#     (STNFC_FW_DEBUG_ENABLED=1 in libnfc-hal-st.conf -- you may need to change
#      the file libnfc-hal-st.conf.user in your source tree)
# - only for type A transactions at the moment.
# Default : mechanism is disabled.
#RF_PARAMS_AUTO_SWITCH=0
#RF_PARAMS_AUTO_SWITCH_ERR_THRESHOLD=3
#RF_PARAMS_AUTO_SWITCH_T1_THRESHOLD=50
#RF_PARAMS_AUTO_SWITCH_T2_THRESHOLD=500
#RF_PARAMS_AUTO_SWITCH_CYCLES=2